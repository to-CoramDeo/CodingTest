# 문제: 알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램
# 입력: 첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.
# 출력: 각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다. 만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.

import string # 모듈
ASCII = list(string.ascii_lowercase) # 아스키코드를 이용해 알파벳 소문자를 리스트로 받는다.

S = input() # 문자열 입력

for i in range(len(ASCII)): 
    # .find(): 문자열 내부에 특정 문자가 어디에 위치하는지 확인한다. (왼쪽부터 찾아서 처음 등장하는 위치를 찾는다.)
    print(S.find(ASCII[i]), end= " ") # end= " "를 이용하여 한 줄에 출력한다.